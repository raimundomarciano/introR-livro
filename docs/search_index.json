[["obtendo-dados.html", "8 Obtendo dados 8.1 Planilhas (csv / Excel) 8.2 TXT (bloco de notas) e Word 8.3 XML 8.4 Dados coletados por meio de pacotes 8.5 Juntando bases", " 8 Obtendo dados O R oferece muitas opções de pacotes para importar os dados presentes em um arquivo. Além disso, alguns pacotes permitem que você colete dados de fontes oficiais facilmente. 8.1 Planilhas (csv / Excel) dados &lt;- read.csv(&quot;data/df_info.csv&quot;, encoding = &quot;UTF-8&quot;, colClasses = c(&quot;cnpj&quot; = &quot;character&quot;)) Solicitamos as cinco primeiras colunas das cinco primeiras linhas: dados[1:5, 1:5] ## name.company id.company cnpj ## 1 524 PARTICIPAÇOES SA 16284 1851771000155 ## 2 ADVANCED DIGITAL HEALTH MEDICINA PREVENTIVA S.A. 21725 10345009000198 ## 3 AES TIETÊ ENERGIA S.A 18970 4128563000110 ## 4 AFLUENTE TRANSMISSÃO DE ENERGIA ELETRICA S/A 22179 10338320000100 ## 5 ALEF SA 16705 2217319000107 ## date.registration date.constitution ## 1 1997-05-30 1997-04-02 ## 2 2009-06-24 2008-08-18 ## 3 2001-06-29 2000-11-06 ## 4 2010-09-24 2008-08-18 ## 5 1997-12-08 1997-10-06 O CNPJ está parecendo um pouco estranho. O nosso conhecimento prévio nos diz que todos os CNPJs possuem 14 dígitos. Uma simples inspeção visual revela que o número de caracteres parece estar diferente ao longo das linhas. Vamos ver se é verdade usando a função nchar(). nchar(dados$cnpj[1:5]) ## [1] 13 14 13 14 13 Isso significa que o CNPJ realmente está com um número diferente de caracteres: o primeiro tem 13 (errado); o segundo, 14 (certo); o terceiro, 13 (errado); e assim por diante. Não é interessante que deixemos nossos dados assim, então precisamos investigar o que está errado. Nosso conhecimento prévio também indica uma possível falha: vários CNPJs são iniciados com o dígito zero. Como a AES Tietê Energia S.A. está listada na bolsa de valores, é fácil achar seu CNPJ fazendo uma busca no Google: 04.128.563/0001-10. Com isso, temos uma evidência do problema e é interessante analisar mais alguns casos similares (o que, aliás, se confirma). Feito isso, precisamos saber se o problema está na importação ou no arquivo original que continha os dados. Como o arquivo é pequeno (menos de 100kb), é fácil inspecioná-lo, abrindo em uma planilha eletrônica convencional ou até mesmo no Bloco de Notas (foi a minha opção). Com isso, constatamos que os zeros do começo realmente estão faltando no arquivo e podemos concluir que não há erro na nossa importação. Entretanto, não significa que o dado está como queríamos, devendo ser tratado. Primeiro, vamos avaliar se há algum com menos de 13 dígitos. Afinal, não é porque nas primeiras cinco linhas o menor valor fio 13 que isso seja representativo de todo o conjunto, podendo haver algum CNPJ iniciado por 00, por exemplo. caracteres &lt;- nchar(dados$cnpj) table(caracteres) ## caracteres ## 3 9 10 11 12 13 14 ## 1 1 1 1 10 117 199 Logo, há um ou mais CNPJs em que o primeiro dígito diferente de 0 é o 12º. Assim, precisaremos preencher com zeros até termos 14 dígitos. zeros &lt;- NA for (i in 1:nrow(dados)){ numeroZeros &lt;- 14 - nchar(dados$cnpj[i]) if(numeroZeros == 0){ next } else { zeros &lt;- rep(&quot;0&quot;, numeroZeros) zeros &lt;- paste0(zeros, collapse = &quot;&quot;) dados$cnpj[i] &lt;- paste0(zeros, dados$cnpj[i], collapse = &quot;&quot;) } } # Vamos atualizar o vetor de caracteres caracteres &lt;- nchar(dados$cnpj) # E solicitar a frequência table(caracteres) ## caracteres ## 14 ## 330 8.2 TXT (bloco de notas) e Word 8.3 XML 8.4 Dados coletados por meio de pacotes 8.4.1 GetDFPData 8.4.2 BCBData 8.5 Juntando bases "]]
