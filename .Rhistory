numeroZeros <- 14 - nchar(dados$cnpj[i])
if(numeroZeros == 0){
next
} else {
zeros <- rep("0", numeroZeros)
zeros <- paste0(zeros, collapse = "")
dados$cnpj[i] <- paste0(zeros, dados$cnpj[i], collapse = "")
}
}
table(nchar(dados$cnpj))
caracteres <- nchar(dados$cnpj)
table(caracteres)
a = data.frame(name = c("a", "b"))
a = data.frame(name = c("a", "b"), age = c(10,15))
a
b = as.tibble(a)
b = tibble::as.tibble(a)
b = tibble::as_tibble(a)
b
a$na
a$nam
b = as.tibble(a)
a = data.frame(name = c("a", "b"), stringsAsFactors = F)
a
a = data.frame(name = c("a", "b"), age = c(1,2), stringsAsFactors = F)
a
b = tibble::as_tibble(a)
b
str(a)
# chamando o pacote tibble
library(tibble)
primeiroTibble <- tibble(variavel1 = c("raimundo", "marciano"), variavel2 = c(29,12))
primeiroDataFrame <- data.frame(variavel1 = c("raimundo", "marciano"), variavel2 = c(29,12))
primeiroTibble
primeiroDataFrame
primeiroTibble <- tibble(variavel1 = c("raimundo", "marciano"), variavel2 = c(29,12))
primeiroTibble
primeiroTibble[[1]]
primeiroTibble[1]
primeiroTibble['var']
primeiroTibble['variavel1']
primeiroTibble['variavel2']
primeiroTibble[1,]
primeiroTibble[2,]
primeiroTibble[1,2]
primeiroTibble[,1]
primeiroTibble[,2]
segundoDataFrame <- data.frame(nome = c("raimundo", "marciano"), numeros = c(29,12), stringsAsFactors = F)
segundoDataFrame
str(segundoDataFrame)
# chamando o pacote tibble
library(tibble)
primeiroTibble <- tibble(nome = c("raimundo", "marciano"), numeros = c(29,12))
primeiroDataFrame <- data.frame(nome = c("raimundo", "marciano"), numeros = c(29,12))
primeiroTibble
primeiroDataFrame
str(primeiroDataFrame)
#Para solicitar a colunha chamada de 'nome'
primeiroTibble['nome']
#Para solicitar a segunda coluna
primeiroTibble[,2]
primeiroDataFrame['nome']
primeiroDataFrame['nom']
primeiroDataFrame$nome
primeiroDataFrame$nom
outroTibble <- tibble(nome = c("raimundo", "marciano"), nUmErOs = c(29,12))
vignette("tibble", package = "tibble")
# Se a matriz dos inteiros de 1 a 6, dispostos em 3 linhas e 2 colunas, preenchida pela ordem das linhas.
mat = matrix(c(1:6), nrow = 3, ncol = 2, byrow = TRUE)
print(mat)
ls
ls()
attributes(outroTibble)
a=5
typeof(a)
a = c(5)
a = "eu"
typeof(a)
str(a)
a=1
str(a)
typeof(a)
a === 5
a == 5
attributes(a)
b = "eu"
attributes(a)
getwd()
1
1L
1.0
1.0L
1L/2
1L+.5
TRUE and FALSE
TRUE AND FALSE
TRUE & FALSE
?array
array(1:6, dim = c(2,3,2))
linhas = c("linhaA", "linhaB")
colunas = c("colA", "colB")
dimensoes = c("dimA", "dimB")
array(1:6, dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c("linhaA", "linhaB")
colunas = c("colA", "colB", "colC")
dimensoes = c("dimA", "dimB")
array(1:6, dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c("linhaA", "linhaB")
colunas = c("colA", "colB", "colC")
dimensoes = c("dimA", "dimB")
array(1:12, dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c("Janeiro", "Fevereiro")
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa B")
array(1:12, dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c("Janeiro", "Fevereiro")
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa B")
array(c("30%"), dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c(2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa B")
array(c(0.30, 0.35, 0.32, 0.36, 1.08, 1.12,
0.40, 0.25, 0.45, 0.30, 0.99, 1.13,),
dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c(2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa B")
array(c(0.30, 0.35, 0.32, 0.36, 1.08, 1.12,
0.40, 0.25, 0.45, 0.30, 0.99, 1.13),
dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c(2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa B")
data.frame(c(0.30, 0.35, 0.32, 0.36, 1.08, 1.12,
0.40, 0.25, 0.45, 0.30, 0.99, 1.13),
dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c(2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa B")
data.frame(c(0.30, 0.35, 0.32, 0.36, 1.08, 1.12,
0.40, 0.25, 0.45, 0.30, 0.99, 1.13),
ncol = 3)
# dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
?data.frame
linhas = c(2019, 2020, 2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa B", "Empresa A", "Empresa B")
data.frame(dimensoes, linhas)
# c(0.30, 0.35, 0.32, 0.36, 1.08, 1.12,
#        0.40, 0.25, 0.45, 0.30, 0.99, 1.13),
#       ncol = 3)
# dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c(2019, 2020, 2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa A", "Empresa B", "Empresa B")
data.frame(dimensoes, linhas)
# c(0.30, 0.35, 0.32, 0.36, 1.08, 1.12,
#        0.40, 0.25, 0.45, 0.30, 0.99, 1.13),
#       ncol = 3)
# dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c(2019, 2020, 2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa A", "Empresa B", "Empresa B")
data.frame(dimensoes, linhas, ROA = c(0.30, 0.35, 0.40, 0.25),
ROE = c(0.32, 0.36,0.45, 0.30), Liquidez = c(1.08, 1.12,0.99, 1.13))
linhas = c(2019, 2020, 2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa A", "Empresa B", "Empresa B")
data.frame(Empresas = dimensoes, Anos = linhas, ROA = c(0.30, 0.35, 0.40, 0.25),
ROE = c(0.32, 0.36,0.45, 0.30), Liquidez = c(1.08, 1.12,0.99, 1.13))
vetor = c("bom", "bom", "excelente")
fat = factor(vetor, levels = c("bom", "excelente"))
fat
vetor = c("bom", "bom", "excelente")
fat = factor(vetor, levels = c("bom", "excelente"))
fat
fat[1] > fat[3]
vetor = c("bom", "bom", "excelente")
fat = factor(vetor, levels = c("bom", "excelente"))
fat
vetor = c("bom", "bom", "excelente")
fat = factor(vetor, levels = c("bom", "excelente"), ordered = TRUE)
fat
fat[1] < fat[3]
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
?t.test
?wilcox.test
?kruskal.test
lista = list(identificador1, dados1, identificador2, dados2)
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, dados2)
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, dados2)
View(lista)
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, dados2)
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(c(identificador1, dados1), c(identificador2, dados2))
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(list(identificador1, dados1), list(identificador2, dados2))
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1)
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = c(list(identificador1, dados1), list(identificador2, dados2))
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, dados2)
lista
lista[1]
lista[2]
lista[2][1]
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, 2,18,74)
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, 2,18,74)
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2)
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, dados2)
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, dados2)
unlist(lista)
lista2 = list(c("primeiro", "segundo"), matrix(1:9))
lista2
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[2]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[2][1]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[2][1][1]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[2][1][1,1]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[[2]][1][1,1]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[[2]]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[[2]][1,1]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[2][1,1]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
names(lista2) <- c("ordem", "dados")
lista2
install.packages("xaringan")
library("xaringan")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
mensgaem = "Olá Mundo"
x = 1
# Essa é uma linha de comentário
1+1 # os comentários também podem vir imediatamente apóso código
?clipr
clipr::read_clip_tbl(a	b	c
1	4	2
2	5	2,236067977
3	6	2,449489743
)
clipr::read_clip()
clipr::read_clip_tbl()
a = clipr::read_clip_tbl()
View(a)
a = clipr::read_clip_tbl(dec=",")
str(a)
diario = data.frame()
lcto = c("d", "caixa", "100")
diario = rbind(diario, lcto)
View(diario)
lancamento <- function(tipo, conta, valor){
diario <- rbind(diario, c(tipo, conta, valor))
}
lancamento <- function(lcto){
diario <- rbind(diario, c(tipo, conta, valor))
}
lancamento <- function(tipo, conta, valor){
diario <- rbind(diario, c(tipo, conta, valor))
}
lancamento(lcto)
lancamento("d", "caixa", "100")
diario = data.frame()
lancamento <- function(tipo, conta, valor){
diario <- rbind(diario, c(tipo, conta, valor))
}
lancamento("d", "caixa", "100")
lancamento <- function(tipo, conta, valor){
diario <- rbind(diario, c(tipo, conta, valor))
diario
}
lancamento("d", "caixa", "100")
diario <- lancamento("d", "caixa", "100")
diario <- lancamento("d", "caixa", "100")
diario <- lancamento("d", "caixa", "100")
View(diario)
lancamento <- function(tipo, conta, valor){
diario <- rbind(diario, c(tipo, conta, valor))
}
diario <- lancamento("d", "caixa", "100")
diario <- lancamento("d", "caixa", "100")
diario = data.frame()
diario <- lancamento("d", "capital a integralizar", 10000, "Subscrição de capital")
lancamento <- function(tipo, conta, valor, historico){
diario <- rbind(diario, c(tipo, conta, valor, historico = "."))
}
diario <- lancamento("d", "capital a integralizar", 10000, "Subscrição de capital")
diario <- lancamento("c", "capital social", 10000, "Subscrição de capital")
diario = data.frame()
diario <- lancamento("d", "capital a integralizar", 10000, "Subscrição de capital")
diario <- lancamento("c", "capital social", 10000, "Subscrição de capital")
diario <- lancamento("d", "caixa", 10000, "Integralização de capital")
diario <- lancamento("c", "capital a integralizar", 10000, "Integralização de capital")
View(diario)
diario = data.frame()
lancamento <- function(tipo, conta, valor, historico = "."){
diario <- rbind(diario, c(tipo, conta, valor, historico))
}
diario <- lancamento("d", "capital a integralizar", 10000, "Subscrição de capital")
diario <- lancamento("c", "capital social", 10000, "Subscrição de capital")
diario <- lancamento("d", "caixa", 10000, "Integralização de capital")
diario <- lancamento("c", "capital a integralizar", 10000, "Integralização de capital")
View(diario)
library(dplyr)
colnames(diario) <- c("tipo", "conta", "valor", "historico")
diario = data.frame()
colnames(diario) <- c("tipo", "conta", "valor", "historico")
data.frame?
a
help("data.frame")
lancamento <- function(tipo, conta, valor, historico = "."){
diario <- rbind(diario, c(tipo, conta, valor, historico))
}
diario <- lancamento("d", "capital a integralizar", 10000, "Subscrição de capital")
diario <- lancamento("c", "capital social", 10000, "Subscrição de capital")
diario <- lancamento("d", "caixa", 10000, "Integralização de capital")
diario <- lancamento("c", "capital a integralizar", 10000, "Integralização de capital")
colnames(diario) <- c("tipo", "conta", "valor", "historico")
diario %>% select(tipo, valor) %>% group_by(tipo) %>% summarise(sum(valor))
diario %>% select(tipo, valor)
diario %>% select(tipo, valor) %>% group_by(tipo)
diario %>% select(tipo, valor) %>% group_by(tipo) %>% summarise(sum(valor))
diario %>% select(tipo, valor) %>% group_by(tipo) %>% summarise(Soma = sum(valor))
library(dplyr)
diario = data.frame()
lancamento <- function(tipo, conta, valor, historico = "."){
diario <- rbind(diario, c(tipo, conta, valor, historico))
}
diario <- lancamento("d", "capital a integralizar", 10000, "Subscrição de capital")
diario = data.frame(matrix(ncol = 4, nrow = 0))
colnames(diario) <- c("tipo", "conta", "valor", "historico")
lancamento <- function(tipo, conta, valor, historico = "."){
diario <- rbind(diario, c(tipo, conta, valor, historico))
}
diario <- lancamento("d", "capital a integralizar", 10000, "Subscrição de capital")
diario = data.frame(matrix(ncol = 4, nrow = 0))
colnames(diario) <- c("tipo", "conta", "valor", "historico")
lancamento <- function(tipo, conta, valor, historico = "."){
rbind(diario, c(tipo, conta, valor, historico))
}
diario <- lancamento("d", "capital a integralizar", 10000, "Subscrição de capital")
lancamento <- function(tipo, conta, valor, historico = "."){
temp <- data.frame(tipo, conta, valor, historico)
rbind(diario, temp)
}
diario = data.frame(matrix(ncol = 4, nrow = 0))
colnames(diario) <- c("tipo", "conta", "valor", "historico")
lancamento <- function(tipo, conta, valor, historico = "."){
temp <- data.frame(tipo, conta, valor, historico)
rbind(diario, temp)
}
diario <- lancamento("d", "capital a integralizar", 10000, "Subscrição de capital")
diario <- lancamento("c", "capital social", 10000, "Subscrição de capital")
diario <- lancamento("d", "caixa", 10000, "Integralização de capital")
diario <- lancamento("c", "capital a integralizar", 10000, "Integralização de capital")
conferidor <- function(){
diario %>% select(tipo, valor) %>% group_by(tipo) %>% summarise(Soma = sum(valor))
}
diario %>% select(tipo, valor) %>% group_by(tipo) %>% summarise(Soma = sum(valor))
conferidor <- function(){
temp = diario %>% select(tipo, valor) %>% group_by(tipo) %>% summarise(Soma = sum(valor))
print("Créditos: ", temp$Soma[1])
print("Débitos: ", temp$Soma[2])
}
conferidor()
conferidor <- function(){
temp = diario %>% select(tipo, valor) %>% group_by(tipo) %>% summarise(Soma = sum(valor))
print(paste0("Créditos: ", temp$Soma[1]))
print(paste0("Débitos: ", temp$Soma[2]))
}
conferidor()
planoContas <- data.frame(categoria = c("A", "A", "A", "E", "E", "E"),
conta = c("Ativo Total", "Ativo Circulante", "Caixa",
"Patrimônio Líquido", "Capital Social", "Capital a Integralizar")
)
View(planoContas)
planoContas <- data.frame(categoria = c("A", "A", "A", "E", "E", "E"),
conta = c("Ativo Total", "Ativo Circulante", "Caixa",
"Patrimônio Líquido", "Capital Social", "Capital a Integralizar"),
natureza = c("d", "d", "d", "c", "c", "c")
)
planoContas <- data.frame(categoria = c("A", "A", "A", "E", "E", "E"),
conta = c("Ativo Total", "Ativo Circulante", "Caixa",
"Patrimônio Líquido", "Capital Social", "Capital a Integralizar"),
natureza = c("d", "d", "d", "c", "c", "c")
)
balancete <- planoContas
planoContas <- data.frame(categoria = c("A", "A", "E", "E", "E"),
conta = c("Ativo Total", "Caixa",
"Patrimônio Líquido", "Capital Social", "Capital a Integralizar"),
natureza = c("d", "d", "c", "c", "c")
)
balancete <- planoContas
library(dplyr)
diario = data.frame(matrix(ncol = 4, nrow = 0))
colnames(diario) <- c("tipo", "conta", "valor", "historico")
lancamento <- function(tipo, conta, valor, historico = "."){
temp <- data.frame(tipo, conta, valor, historico)
rbind(diario, temp)
}
diario <- lancamento("d", "Capital a Integralizar", 10000, "Subscrição de Capital")
diario <- lancamento("c", "Capital Social", 10000, "Subscrição de Capital")
diario <- lancamento("d", "Caixa", 10000, "Integralização de Capital")
diario <- lancamento("c", "Capital a Integralizar", 10000, "Integralização de Capital")
conferidor <- function(){
temp = diario %>% select(tipo, valor) %>% group_by(tipo) %>% summarise(Soma = sum(valor))
print(paste0("Créditos: ", temp$Soma[1]))
print(paste0("Débitos: ", temp$Soma[2]))
}
conferidor()
planoContas <- data.frame(categoria = c("A", "A", "E", "E", "E"),
conta = c("Ativo Total", "Caixa",
"Patrimônio Líquido", "Capital Social", "Capital a Integralizar"),
natureza = c("d", "d", "c", "c", "c")
)
balancete <- planoContas
temp <- diario
temp <- left_join(temp, planoContas, all.x = TRUE, all.y = FALSE)
View(temp)
temp <- diario
temp <- left_join(temp, planoContas, all.x = TRUE, all.y = FALSE)
if (temp$tipo != temp$natureza) {temp$valor = -temp$valor }
if (temp$tipo != temp$natureza) {temp$valor = temp$valor * (-1) }
View(temp)
if (temp$tipo == temp$natureza) {temp$valor = temp$valor * (-1) }
ifelse (temp$tipo == temp$natureza, temp$valor = temp$valor, temp$valor = -temp$valor)
temp$valor <- ifelse (temp$tipo == temp$natureza, temp$valor*1, temp$valor*-1)
View(temp)
temp <- temp %>% group_by(conta) %>% summarise(valor = sum(valor))
View(temp)
levantaBalancete <- function(){
temp <- diario
temp <- left_join(temp, planoContas, all.x = TRUE, all.y = FALSE)
temp$valor <- ifelse (temp$tipo == temp$natureza, temp$valor*1, temp$valor*-1)
temp <- temp %>% group_by(conta) %>% summarise(valor = sum(valor))
temp
}
rm(temp)
levantaBalancete()
imprimeDiario <-function(){
print(diario)
}
imprimeDiario()
