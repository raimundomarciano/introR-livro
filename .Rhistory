url <- https://github.com/raimundomarciano/introR-livro/blob/main/data/df_info.csv
url <- "https://github.com/raimundomarciano/introR-livro/blob/main/data/df_info.csv"
read.csv(url)
dados <- read.csv("data/df_info.csv")
View(dados)
dados2 <- read.csv2("data/df_info.csv")
View(dados2)
dados2 <- read.csv("data/df_info.csv")
?read.csv
dados <- read.csv("data/df_info.csv", encoding = "latin1")
View(dados)
dados <- read.csv("data/df_info.csv", encoding = "utf-8")
View(dados)
dados <- read.csv("data/df_info.csv", encoding = "utf8")
View(dados)
dados <- read.csv("data/df_info.csv", encoding = "UTF-8")
View(dados)
rm(dad0s2)
rm(dados2)
View(dados)
dados <- read.csv("data/df_info.csv", encoding = "UTF-8", colClasses = c("cnpj" = "character"))
View(dados)
str(dados)
dados$cnpj
dados$cnpj[5]
len(dados$cnpj[5])
length(dados$cnpj[5])
nchar(dados$cnpj[5])
nchar("2217319000107")
dados <- read.csv("data/df_info.csv", encoding = "UTF-8", colClasses = c("cnpj" = "character"))
dados[1:5, 1:5]
nchar(dados$cnpj[1:5])
nchar(dados$cnpj)
caracteres <- nchar(dados$cnpj)
caracteres <- nchar(dados$cnpj)
min(caracteres)
caracteres2 <- rep(0, nchar(dados$cnpj))
caracteres2 <- rep(0, nchar(dados$cnpj)[1])
caracteres2 <- "0"*5
"a"
"a"*3
rep("a",2)
paste(rep("a",2), collapse = T)
c(rep("a",2), collapse = T)
c(rep("a",2))
paste((rep("a",2))
paste(rep("a",2))
paste(rep("a",2))
paste(rep("a",2), sep ="")
rep("a",2)
a = rep("a",2)
paste(a, sep = "")
paste(a, sep = "", collapse = T)
?paste
paste(a, collapse = "")
paste(0, collapse = "")
paste(rep("0",2), collapse = "")
caracteres2 <- rep("0", nchar(dados$cnpj[1]))
caracteres2 <- paste(rep("0", nchar(dados$cnpj[1])), collapse = "")
caracteres2 <- paste(rep("0", (14-nchar(dados$cnpj[1]))), collapse = "")
caracteres2 <- paste(rep("0", (14-nchar(dados$cnpj))), collapse = "")
dados2 <- dadps
dados2 <- dados
dados2 <- dados$cnpj
paste(dados2, caracteres)
paste(dados2, caracteres, collapse = "")
zeros <- NA
zeros <- for (i in 1:nrow(dados)){
zeros[i] <- (14-nchar(dados$cnpj[i]))
}
zeros <- c()
zeros <- for (i in 1:nrow(dados)){
zeros[i] <- (14-nchar(dados$cnpj[i]))
}
zeros <- c()
zeros <- for (i in 1:nrow(dados)){
zeros[i] <- nchar(dados$cnpj[i])
}
nchar(dados$cnpj[1])
for (i in 1:nrow(dados)){print(i)}
zeros <- c()
zeros <- for (i in 1:nrow(dados)){
#zeros[i] <- nchar(dados$cnpj[i])
print(i)
}
zeros <- c()
for (i in 1:nrow(dados)){
#zeros[i] <- nchar(dados$cnpj[i])
print(i)
}
zeros <- c()
for (i in 1:nrow(dados)){
zeros[i] <- nchar(dados$cnpj[i])
#print(i)
}
zeros <- c()
for (i in 1:nrow(dados)){
zeros[i] <- 14 - nchar(dados$cnpj[i])
#print(i)
}
zeros <- c()
for (i in 1:nrow(dados)){
numeroZeros <- 14 - nchar(dados$cnpj[i])
zeros[i] <- rep("0", numeroZeros)
#print(i)
}
zeros <- c()
for (i in 1:nrow(dados)){
numeroZeros <- 14 - nchar(dados$cnpj[i])
zeros[i] <- rep("0", numeroZeros)
#print(i)
}
zeros <- c()
for (i in 1:nrow(dados)){
numeroZeros <- 14 - nchar(dados$cnpj[i])
if(numeroZeros == 0){
zeros[i] <- NA
} else {
zeros[i] <- rep("0", numeroZeros)
}
}
warnings()
View(caracteres)
table(caracteres)
paste(dados$cnpj, zeros, collapse = "")
?paste
zeros <- NA
dados <- read.csv("data/df_info.csv", encoding = "UTF-8", colClasses = c("cnpj" = "character"))
View(dados)
zeros <- NA
for (i in 1:nrow(dados)){
numeroZeros <- 14 - nchar(dados$cnpj[i])
if(numeroZeros == 0){
next
} else {
zeros <- rep("0", numeroZeros)
dados$cnpj[i] <- paste(zeros, dados$cnpj[i], collapse = "")
}
}
View(dados)
dados <- read.csv("data/df_info.csv", encoding = "UTF-8", colClasses = c("cnpj" = "character"))
zeros <- NA
for (i in 1:nrow(dados)){
numeroZeros <- 14 - nchar(dados$cnpj[i])
if(numeroZeros == 0){
next
} else {
zeros <- rep("0", numeroZeros)
dados$cnpj[i] <- paste0(zeros, dados$cnpj[i], collapse = "")
}
}
dados <- read.csv("data/df_info.csv", encoding = "UTF-8", colClasses = c("cnpj" = "character"))
zeros <- NA
for (i in 1:nrow(dados)){
numeroZeros <- 14 - nchar(dados$cnpj[i])
if(numeroZeros == 0){
next
} else {
zeros <- rep("0", numeroZeros)
dados$cnpj[i] <- paste0(zeros, dados$cnpj[i], collapse = "")
}
}
dados <- read.csv("data/df_info.csv", encoding = "UTF-8", colClasses = c("cnpj" = "character"))
numeroZeros <- 14 - nchar(dados$cnpj[28])
zeros <- rep("0", numeroZeros)
paste0(zeros, dados$cnpj[i], collapse = "")
zeros <- rep("0", numeroZeros)
zeros <- paste0(zeros, collapse = "")
paste0(zeros, dados$cnpj[i], collapse = "")
numeroZeros <- 14 - nchar(dados$cnpj[28])
zeros <- rep("0", numeroZeros)
zeros <- paste0(zeros, collapse = "")
paste0(zeros, dados$cnpj[28], collapse = "")
dados <- read.csv("data/df_info.csv", encoding = "UTF-8", colClasses = c("cnpj" = "character"))
zeros <- NA
for (i in 1:nrow(dados)){
numeroZeros <- 14 - nchar(dados$cnpj[i])
if(numeroZeros == 0){
next
} else {
zeros <- rep("0", numeroZeros)
zeros <- paste0(zeros, collapse = "")
dados$cnpj[i] <- paste0(zeros, dados$cnpj[i], collapse = "")
}
}
dados <- read.csv("data/df_info.csv", encoding = "UTF-8", colClasses = c("cnpj" = "character"))
dados[1:5, 1:5]
nchar(dados$cnpj[1:5])
caracteres <- nchar(dados$cnpj)
min(caracteres)
zeros <- NA
for (i in 1:nrow(dados)){
numeroZeros <- 14 - nchar(dados$cnpj[i])
if(numeroZeros == 0){
next
} else {
zeros <- rep("0", numeroZeros)
zeros <- paste0(zeros, collapse = "")
dados$cnpj[i] <- paste0(zeros, dados$cnpj[i], collapse = "")
}
}
View(dados)
zeros <- NA
for (i in 1:nrow(dados)){
numeroZeros <- 14 - nchar(dados$cnpj[i])
if(numeroZeros == 0){
next
} else {
zeros <- rep("0", numeroZeros)
zeros <- paste0(zeros, collapse = "")
dados$cnpj[i] <- paste0(zeros, dados$cnpj[i], collapse = "")
}
}
table(dados$cnpj)
zeros <- NA
for (i in 1:nrow(dados)){
numeroZeros <- 14 - nchar(dados$cnpj[i])
if(numeroZeros == 0){
next
} else {
zeros <- rep("0", numeroZeros)
zeros <- paste0(zeros, collapse = "")
dados$cnpj[i] <- paste0(zeros, dados$cnpj[i], collapse = "")
}
}
table(nchar(dados$cnpj))
caracteres <- nchar(dados$cnpj)
table(caracteres)
a = data.frame(name = c("a", "b"))
a = data.frame(name = c("a", "b"), age = c(10,15))
a
b = as.tibble(a)
b = tibble::as.tibble(a)
b = tibble::as_tibble(a)
b
a$na
a$nam
b = as.tibble(a)
a = data.frame(name = c("a", "b"), stringsAsFactors = F)
a
a = data.frame(name = c("a", "b"), age = c(1,2), stringsAsFactors = F)
a
b = tibble::as_tibble(a)
b
str(a)
# chamando o pacote tibble
library(tibble)
primeiroTibble <- tibble(variavel1 = c("raimundo", "marciano"), variavel2 = c(29,12))
primeiroDataFrame <- data.frame(variavel1 = c("raimundo", "marciano"), variavel2 = c(29,12))
primeiroTibble
primeiroDataFrame
primeiroTibble <- tibble(variavel1 = c("raimundo", "marciano"), variavel2 = c(29,12))
primeiroTibble
primeiroTibble[[1]]
primeiroTibble[1]
primeiroTibble['var']
primeiroTibble['variavel1']
primeiroTibble['variavel2']
primeiroTibble[1,]
primeiroTibble[2,]
primeiroTibble[1,2]
primeiroTibble[,1]
primeiroTibble[,2]
segundoDataFrame <- data.frame(nome = c("raimundo", "marciano"), numeros = c(29,12), stringsAsFactors = F)
segundoDataFrame
str(segundoDataFrame)
# chamando o pacote tibble
library(tibble)
primeiroTibble <- tibble(nome = c("raimundo", "marciano"), numeros = c(29,12))
primeiroDataFrame <- data.frame(nome = c("raimundo", "marciano"), numeros = c(29,12))
primeiroTibble
primeiroDataFrame
str(primeiroDataFrame)
#Para solicitar a colunha chamada de 'nome'
primeiroTibble['nome']
#Para solicitar a segunda coluna
primeiroTibble[,2]
primeiroDataFrame['nome']
primeiroDataFrame['nom']
primeiroDataFrame$nome
primeiroDataFrame$nom
outroTibble <- tibble(nome = c("raimundo", "marciano"), nUmErOs = c(29,12))
vignette("tibble", package = "tibble")
# Se a matriz dos inteiros de 1 a 6, dispostos em 3 linhas e 2 colunas, preenchida pela ordem das linhas.
mat = matrix(c(1:6), nrow = 3, ncol = 2, byrow = TRUE)
print(mat)
ls
ls()
attributes(outroTibble)
a=5
typeof(a)
a = c(5)
a = "eu"
typeof(a)
str(a)
a=1
str(a)
typeof(a)
a === 5
a == 5
attributes(a)
b = "eu"
attributes(a)
getwd()
1
1L
1.0
1.0L
1L/2
1L+.5
TRUE and FALSE
TRUE AND FALSE
TRUE & FALSE
?array
array(1:6, dim = c(2,3,2))
linhas = c("linhaA", "linhaB")
colunas = c("colA", "colB")
dimensoes = c("dimA", "dimB")
array(1:6, dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c("linhaA", "linhaB")
colunas = c("colA", "colB", "colC")
dimensoes = c("dimA", "dimB")
array(1:6, dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c("linhaA", "linhaB")
colunas = c("colA", "colB", "colC")
dimensoes = c("dimA", "dimB")
array(1:12, dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c("Janeiro", "Fevereiro")
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa B")
array(1:12, dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c("Janeiro", "Fevereiro")
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa B")
array(c("30%"), dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c(2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa B")
array(c(0.30, 0.35, 0.32, 0.36, 1.08, 1.12,
0.40, 0.25, 0.45, 0.30, 0.99, 1.13,),
dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c(2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa B")
array(c(0.30, 0.35, 0.32, 0.36, 1.08, 1.12,
0.40, 0.25, 0.45, 0.30, 0.99, 1.13),
dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c(2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa B")
data.frame(c(0.30, 0.35, 0.32, 0.36, 1.08, 1.12,
0.40, 0.25, 0.45, 0.30, 0.99, 1.13),
dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c(2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa B")
data.frame(c(0.30, 0.35, 0.32, 0.36, 1.08, 1.12,
0.40, 0.25, 0.45, 0.30, 0.99, 1.13),
ncol = 3)
# dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
?data.frame
linhas = c(2019, 2020, 2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa B", "Empresa A", "Empresa B")
data.frame(dimensoes, linhas)
# c(0.30, 0.35, 0.32, 0.36, 1.08, 1.12,
#        0.40, 0.25, 0.45, 0.30, 0.99, 1.13),
#       ncol = 3)
# dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c(2019, 2020, 2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa A", "Empresa B", "Empresa B")
data.frame(dimensoes, linhas)
# c(0.30, 0.35, 0.32, 0.36, 1.08, 1.12,
#        0.40, 0.25, 0.45, 0.30, 0.99, 1.13),
#       ncol = 3)
# dim = c(2,3,2), dimnames = list(linhas,colunas,dimensoes))
linhas = c(2019, 2020, 2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa A", "Empresa B", "Empresa B")
data.frame(dimensoes, linhas, ROA = c(0.30, 0.35, 0.40, 0.25),
ROE = c(0.32, 0.36,0.45, 0.30), Liquidez = c(1.08, 1.12,0.99, 1.13))
linhas = c(2019, 2020, 2019, 2020)
colunas = c("ROA", "ROE", "Liquidez")
dimensoes = c("Empresa A", "Empresa A", "Empresa B", "Empresa B")
data.frame(Empresas = dimensoes, Anos = linhas, ROA = c(0.30, 0.35, 0.40, 0.25),
ROE = c(0.32, 0.36,0.45, 0.30), Liquidez = c(1.08, 1.12,0.99, 1.13))
vetor = c("bom", "bom", "excelente")
fat = factor(vetor, levels = c("bom", "excelente"))
fat
vetor = c("bom", "bom", "excelente")
fat = factor(vetor, levels = c("bom", "excelente"))
fat
fat[1] > fat[3]
vetor = c("bom", "bom", "excelente")
fat = factor(vetor, levels = c("bom", "excelente"))
fat
vetor = c("bom", "bom", "excelente")
fat = factor(vetor, levels = c("bom", "excelente"), ordered = TRUE)
fat
fat[1] < fat[3]
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
?t.test
?wilcox.test
?kruskal.test
lista = list(identificador1, dados1, identificador2, dados2)
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, dados2)
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, dados2)
View(lista)
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, dados2)
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(c(identificador1, dados1), c(identificador2, dados2))
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(list(identificador1, dados1), list(identificador2, dados2))
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1)
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = c(list(identificador1, dados1), list(identificador2, dados2))
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, dados2)
lista
lista[1]
lista[2]
lista[2][1]
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, 2,18,74)
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, 2,18,74)
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2)
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, dados2)
lista
identificador1 = c("matriz")
dados1 = c(1,9,37)
identificador2 = c("filial")
dados2 = c(2, 18, 74)
lista = list(identificador1, dados1, identificador2, dados2)
unlist(lista)
lista2 = list(c("primeiro", "segundo"), matrix(1:9))
lista2
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[2]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[2][1]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[2][1][1]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[2][1][1,1]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[[2]][1][1,1]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[[2]]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[[2]][1,1]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2[2][1,1]
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
lista2
lista2 = list(c("primeiro", "segundo"), matrix(1:9, ncol = 3))
names(lista2) <- c("ordem", "dados")
lista2
